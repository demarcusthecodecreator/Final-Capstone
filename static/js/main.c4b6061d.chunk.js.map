{"version":3,"sources":["layout/Menu.js","utils/date-time.js","utils/format-reservation-date.js","utils/api.js","utils/useQuery.js","layout/ErrorAlert.js","dashboard/ReservationDetail.js","dashboard/TableDetail.js","dashboard/Dashboard.js","layout/NotFound.js","layout/ReservationForm.js","layout/NewReservation.js","layout/NewTable.js","layout/SeatReservation.js","layout/SearchPhone.js","layout/EditReservation.js","layout/Routes.js","layout/Layout.js","App.js","index.js"],"names":["Menu","className","to","id","type","dateFormat","asDateString","date","getFullYear","toString","getMonth","padStart","getDate","formatDate","reservation","reservation_date","match","formatReservationDate","reservations","Array","isArray","map","API_BASE_URL","process","headers","Headers","fetchJson","url","options","onCancel","a","fetch","response","status","json","payload","error","Promise","reject","message","data","name","console","stack","resolve","signal","method","body","JSON","stringify","reservation_id","updateReservationStatus","listReservations","params","URL","Object","entries","forEach","key","value","searchParams","append","then","formatReservationTime","table_id","listTables","useQuery","URLSearchParams","useLocation","search","ErrorAlert","ReservationDetail","history","useHistory","useState","currentReservation","setCurrentReservation","showSeat","setShowSeat","setError","useEffect","reservation_time","first_name","last_name","mobile_number","people","data-reservation-id-status","href","onClick","e","preventDefault","push","catch","data-reservation-id-cancel","window","confirm","go","TableDetail","table","currentTable","setCurrentTable","tableStatus","setTableStatus","table_name","capacity","data-table-id-status","data-table-id-finish","deleteReservationId","deleteTable","Dashboard","Date","setReservations","tables","setTables","viewDate","setViewDate","abortController","AbortController","abort","searchedDate","get","currentDate","split","year","month","day","setMonth","setDate","previous","next","res","NotFound","ReservationForm","handleSubmit","formData","setFormData","onSubmit","required","onChange","target","valueAsNumber","goBack","NewReservation","createReservation","NewTable","setTable_name","setCapacity","createTable","SeatReservation","useParams","formValue","setFormValue","updateSeatReservation","parse","newTables","SearchPhone","setMobile_number","showError","setShowError","length","placeholder","EditReservation","current","find","Number","updateReservation","Routes","exact","path","Layout","App","dotenv","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQA6DeA,MAnDf,WACE,OACE,qBAAKC,UAAU,2CAAf,SACE,sBAAKA,UAAU,yCAAf,UACE,cAAC,IAAD,CACEA,UAAU,kFACVC,GAAG,IAFL,SAIE,qBAAKD,UAAU,0BAAf,SACE,uDAGJ,oBAAIA,UAAU,yBACd,qBAAIA,UAAU,4BAA4BE,GAAG,mBAA7C,UACE,oBAAIF,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,aAA9B,UACE,sBAAMD,UAAU,oBADlB,qBAKF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,UAA9B,UACE,sBAAMD,UAAU,2BADlB,kBAKF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,oBAA9B,UACE,sBAAMD,UAAU,eADlB,2BAKF,oBAAIA,UAAU,WAAd,SACE,eAAC,IAAD,CAAMA,UAAU,WAAWC,GAAG,cAA9B,UACE,sBAAMD,UAAU,iBADlB,wBAMJ,qBAAKA,UAAU,iCAAf,SACE,wBACEA,UAAU,8BACVE,GAAG,gBACHC,KAAK,mB,+BCrDXC,EAAa,qBAcnB,SAASC,EAAaC,GACpB,MAAM,GAAN,OAAUA,EAAKC,cAAcC,SAAS,IAAtC,aAA8CF,EAAKG,WAAa,GAC7DD,SAAS,IACTE,SAAS,EAAG,KAFf,YAEuBJ,EAAKK,UAAUH,SAAS,IAAIE,SAAS,EAAG,MCfjE,SAASE,EAAWC,GAElB,OADAA,EAAYC,iBAAgCD,EAAYC,iBDyBtCC,MAAMX,GAAY,GCxB7BS,EAUM,SAASG,EAAsBC,GAC5C,OAAOC,MAAMC,QAAQF,GACjBA,EAAaG,IAAIR,GACjBA,EAAWK,GCVjB,IAAMI,EACJC,wBAKIC,EAAU,IAAIC,Q,SAkBLC,E,kFAAf,WAAyBC,EAAKC,EAASC,GAAvC,iBAAAC,EAAA,+EAE2BC,MAAMJ,EAAKC,GAFtC,UAI4B,OAFlBI,EAFV,QAIiBC,OAJjB,yCAKa,MALb,uBAQ0BD,EAASE,OARnC,YAQUC,EARV,QAUgBC,MAVhB,0CAWaC,QAAQC,OAAO,CAAEC,QAASJ,EAAQC,SAX/C,iCAaWD,EAAQK,MAbnB,qCAeuB,eAAf,KAAMC,KAfd,uBAgBMC,QAAQN,MAAM,KAAMO,OAhB1B,sCAmBWN,QAAQO,QAAQf,IAnB3B,2D,kEAkCO,WAAiCW,EAAMK,GAAvC,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,iBAECM,EAAU,CACdkB,OAAQ,OACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,SACvBK,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,kEAsCA,WAAiCY,EAAMU,EAAgBL,GAAvD,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,yBACuC4B,GACtCtB,EAAU,CACdkB,OAAQ,MACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,SACvBK,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,sBAsBA,SAAeuB,EAAtB,sC,4CAAO,WAAuCX,EAAMU,EAAgBL,GAA7D,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,yBACuC4B,EADvC,WAECtB,EAAU,CACdkB,OAAQ,MACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,SACvBK,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,sBAgBA,SAAewB,EAAtB,oC,4CAAO,WAAgCC,EAAQR,GAAxC,eAAAf,EAAA,6DACCH,EAAM,IAAI2B,IAAJ,UAAWhC,EAAX,kBACZiC,OAAOC,QAAQH,GAAQI,SAAQ,mCAAEC,EAAF,KAAOC,EAAP,YAC7BhC,EAAIiC,aAAaC,OAAOH,EAAKC,EAAMlD,eAHhC,SAKQiB,EAAUC,EAAK,CAAEH,UAASqB,UAAU,IAC9CiB,KAAK7C,GACL6C,KAAKC,GAPH,oF,kEAqBA,WAA2BvB,EAAMK,GAAjC,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,WAECM,EAAU,CACdkB,OAAQ,OACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,SACvBK,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,kEAuBA,WAAqCoC,EAAUd,EAAgBL,GAA/D,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,mBACiC0C,EADjC,SAECpC,EAAU,CACdkB,OAAQ,MACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,KAAM,CAAEU,oBAC/BL,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,kEAkBA,WAAmCoC,EAAUnB,GAA7C,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,mBACiC0C,EADjC,SAECpC,EAAU,CACdkB,OAAQ,SACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,KAAM,CAAEwB,cAC/BnB,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,sBAkBA,SAAeqC,EAAtB,kC,4CAAO,WAA0BpB,GAA1B,eAAAf,EAAA,6DACCH,EAAM,IAAI2B,IAAJ,UAAWhC,EAAX,YADP,SAEQI,EAAUC,EAAK,CAAEH,UAASqB,UAAU,IAF5C,oF,kEAKA,WAA2BmB,EAAUnB,GAArC,iBAAAf,EAAA,6DACCH,EADD,UACUL,EADV,WAECM,EAAU,CACdkB,OAAQ,SACRtB,UACAuB,KAAMC,KAAKC,UAAU,CAAET,KAAM,CAAEwB,cAC/BnB,UANG,SAQQnB,EAAUC,EAAKC,GARvB,oF,sBApNPJ,EAAQqC,OAAO,eAAgB,oBCChBK,MAJf,WACE,OAAO,IAAIC,gBAAgBC,cAAcC,SCM5BC,MARf,YAAgC,IAAVlC,EAAS,EAATA,MACpB,OACEA,GACE,sBAAKnC,UAAU,yBAAf,oBAAgDmC,EAAMG,YCmG7CgC,MA3Gf,YAA6C,IAAhBzD,EAAe,EAAfA,YACrB0D,EAAUC,cAD0B,EAGUC,mBAAS5D,GAHnB,mBAGnC6D,EAHmC,KAGfC,EAHe,OAIVF,oBAAS,GAJC,mBAInCG,EAJmC,KAIzBC,EAJyB,OAKhBJ,mBAAS,MALO,mBAKnCtC,EALmC,KAK5B2C,EAL4B,KAkD1C,OA3CAC,qBAAU,WAEwB,WAA9BL,EAAmB1C,QACW,OAA9B0C,EAAmB1C,QAEnB6C,GAAY,KAEb,CAACH,IAqCF,sBAAK1E,UAAU,iCAAf,UACE,cAAC,EAAD,CAAYmC,MAAOA,IACnB,sBAAKnC,UAAU,YAAf,UACE,oBAAIA,UAAU,yBAAd,SACG0E,EAAmBM,mBAEtB,mBAAGhF,UAAU,wBAAb,SACG0E,EAAmB5D,mBAGtB,oBAAGd,UAAU,YAAb,UACG0E,EAAmBO,WADtB,IACmCP,EAAmBQ,aAEtD,mBAAGlF,UAAU,YAAb,SAA0B0E,EAAmBS,gBAC7C,oBAAGnF,UAAU,YAAb,yBAAsC0E,EAAmBU,UACzD,mBACEpF,UAAU,uBACVqF,6BAA4BX,EAAmBzB,eAFjD,SAIGyB,EAAmB1C,OAAS0C,EAAmB1C,OAAS,WAG3D,qBAAKhC,UAAU,qCAAf,SACG4E,EACC,mBACEU,KAAI,wBAAmBZ,EAAmBzB,eAAtC,SACJsC,QA7DO,SAACC,GAClBA,EAAEC,iBACFX,EAAS,MACTD,GAAY,GACZ3B,EACE,CAAElB,OAAQ,UACV0C,EAAmBzB,gBAElBY,MAAK,SAAC9B,GACL4C,EAAsB5C,GACtBwC,EAAQmB,KAAR,wBAA8BhB,EAAmBzB,eAAjD,aAED0C,MAAMb,IAkDC9E,UAAU,mCAHZ,kBAQA,0BAIJ,sBAAKA,UAAU,0CAAf,UACE,mBACEsF,KAAI,wBAAmBZ,EAAmBzB,eAAtC,SACJjD,UAAU,8BAFZ,kBAMA,wBACE4F,6BAA4BlB,EAAmBzB,eAC/CsC,QAjEc,SAACC,GACvBA,EAAEC,iBACFX,EAAS,OAIU,IAHAe,OAAOC,QACxB,mEAGA5C,EACE,CAAElB,OAAQ,aACV0C,EAAmBzB,gBAElBY,MAAK,SAAC9B,GACL4C,EAAsB5C,GACtBwC,EAAQwB,GAAG,MAEZJ,MAAMb,IAmDH9E,UAAU,yCAHZ,0CCAKgG,MA1Ff,YAAiC,IAAVC,EAAS,EAATA,MACf1B,EAAUC,cADc,EAEUC,mBAASwB,GAFnB,mBAEvBC,EAFuB,KAETC,EAFS,OAGQ1B,mBAAS,QAHjB,mBAGvB2B,EAHuB,KAGVC,EAHU,OAIJ5B,mBAAS,MAJL,mBAIvBtC,EAJuB,KAIhB2C,EAJgB,KAoD9B,OA9CAC,qBAAU,WACJmB,EAAajD,eACfoD,EAAe,+BAAD,OACmBH,EAAajD,iBAG9CoD,EAAe,UAEhB,CAACH,IAuCF,sBAAKlG,UAAU,mCAAf,UACE,cAAC,EAAD,CAAYmC,MAAOA,IACnB,sBAAKnC,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,yBAAsCkG,EAAaI,cACnD,oBAAGtG,UAAU,YAAb,6BAA0CkG,EAAaK,YACvD,mBACEvG,UAAU,YACVwG,uBAAA,UAAyBN,EAAanC,UAFxC,SAIGqC,IAEH,qBAAKpG,UAAU,gCAAf,SACmB,SAAhBoG,EACC,wBAEA,gCACE,wBACEpG,UAAU,kBACVyG,uBAAsBP,EAAanC,SACnCwB,QAxDO,SAACC,GACpBA,EAAEC,iBACFX,EAAS,OAIU,IAHAe,OAAOC,QACxB,oEAGA5C,EACE,CAAElB,OAAQ,YACVkE,EAAajD,gBACb0C,MAAMb,GJwKP,SAAP,oCIvKM4B,CAAoBR,EAAanC,UAC9BF,MAAK,SAAC9B,GACLoE,EAAgBpE,GAChBwC,EAAQwB,GAAG,MAEZJ,MAAMb,KAqCD,oBAMU,IACV,wBAAQ9E,UAAU,iBAAiBuF,QAxC1B,SAACC,GACpBA,EAAEC,kBAuCQ,yBAMN,wBAAQzF,UAAU,iBAAiBuF,QA1CpB,SAACC,GACpBA,EAAEC,iBACFX,EAAS,OAIU,IAHAe,OAAOC,QACxB,wEJ6KC,SAAP,oCI1KMa,CAAYT,EAAanC,UAAU4B,MAAMb,GACzCP,EAAQwB,GAAG,KAkCT,2BCsBOa,MAzGf,WACE,IAAMtG,EPuCCD,EAAa,IAAIwG,MOxCL,EAGqBpC,mBAAS,MAH9B,mBAGZxD,EAHY,KAGE6F,EAHF,OAISrC,mBAAS,MAJlB,mBAIZsC,EAJY,KAIJC,EAJI,OAKavC,mBAASnE,GALtB,mBAKZ2G,EALY,KAKFC,EALE,OAMOzC,mBAAS,MANhB,mBAMZtC,EANY,KAML2C,EANK,KAQnBC,qBAAU,WACR,IAAMoC,EAAkB,IAAIC,gBAW5B,OAVAtC,EAAS,MACLmC,IAAa3G,EACf6C,EAAiB,CAAE7C,QAAQ6G,EAAgBvE,QACxCiB,KAAKiD,GACLnB,MAAMb,GAET3B,EAAiB,CAAE8D,YAAYE,EAAgBvE,QAC5CiB,KAAKiD,GACLnB,MAAMb,GAEJ,kBAAMqC,EAAgBE,WAC5B,CAAC/G,EAAM2G,IAEVlC,qBAAU,WACR,IAAMoC,EAAkB,IAAIC,gBAG5B,OAFAtC,EAAS,MACTd,IAAaH,KAAKmD,GAAWrB,MAAMb,GAC5B,kBAAMqC,EAAgBE,WAC5B,IAEH,IACMC,EADQrD,IACasD,IAAI,QAqB/B,OAnBAxC,qBAAU,WACJuC,GAAiC,KAAjBA,GAClBJ,EAAYI,KAEb,CAACA,IAeArG,EAEA,iCACE,qBAAKjB,UAAU,qCAAf,SACE,kDAGF,sBAAKA,UAAU,qCAAf,UACE,wBAAQA,UAAU,eAAeuF,QArBf,SAACC,GACzBA,EAAEC,iBACFyB,EPSG,SAAkBM,GAAc,IAAD,EACXA,EAAYC,MAAM,KADP,mBAC/BC,EAD+B,KACzBC,EADyB,KAClBC,EADkB,KAG9BtH,EAAO,IAAIuG,KAAKa,EADtBC,GAAS,EAC0BC,GAGnC,OAFAtH,EAAKuH,SAASvH,EAAKG,YACnBH,EAAKwH,QAAQxH,EAAKK,UAAY,GACvBN,EAAaC,GOfNyH,CAASd,KAmBf,0BAGA,wBAAQjH,UAAU,eAAeuF,QAhBlB,SAACC,GACtBA,EAAEC,iBACFyB,EAAY5G,IAcN,mBAGA,wBAAQN,UAAU,eAAeuF,QAvBnB,SAACC,GACrBA,EAAEC,iBACFyB,EPqBG,SAAcM,GAAc,IAAD,EACPA,EAAYC,MAAM,KADX,mBAC3BC,EAD2B,KACrBC,EADqB,KACdC,EADc,KAG1BtH,EAAO,IAAIuG,KAAKa,EADtBC,GAAS,EAC0BC,GAGnC,OAFAtH,EAAKuH,SAASvH,EAAKG,YACnBH,EAAKwH,QAAQxH,EAAKK,UAAY,GACvBN,EAAaC,GO3BN0H,CAAKf,KAqBX,yBAKF,cAAC,EAAD,CAAY9E,MAAOA,IAEnB,sBAAKnC,UAAU,YAAf,UACE,qBAAKA,UAAU,qCAAf,SACE,wCAAWiH,OAEb,qBAAKjH,UAAU,MAAf,SACGiB,GACCA,EAAaG,KAAI,SAAC6G,GAAD,OACf,qBAAKjI,UAAU,gBAAf,SACE,cAAC,EAAD,CAAmBa,YAAaoH,KADEA,EAAIhF,wBAOhD,sBAAKjD,UAAU,YAAf,UACE,oBAAIA,UAAU,oCAAd,oBACA,qBAAKA,UAAU,MAAf,SACG+G,GACCA,EAAO3F,KAAI,SAAC6E,GAAD,OACT,qBAAKjG,UAAU,gBAAf,SACE,cAAC,EAAD,CAAaiG,MAAOA,KADcA,EAAMlC,qBAS/C,8CC5FImE,MARf,WACE,OACE,qBAAKlI,UAAU,WAAf,SACE,8C,QCqISmI,MA/If,YAAmE,IAAxCC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,YAC3C/D,EAAUC,cAOhB,OACE,uBAAMxE,UAAU,aAAauI,SAAUH,EAAvC,UACE,uBAAOpI,UAAU,aAAjB,yBACA,uBACA,uBACEwC,KAAK,aACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYO,EAAEkD,OAAOhF,MACrBwB,UAAWmD,EAASnD,UACpBC,cAAekD,EAASlD,cACxBrE,iBAAkBuH,EAASvH,iBAC3BkE,iBAAkBqD,EAASrD,iBAC3BI,OAAQiD,EAASjD,UAGrB1B,MAAO2E,EAASpD,WAChBjF,UAAU,iBAEZ,uBACA,uBAAOA,UAAU,aAAjB,wBACA,uBACA,uBACEwC,KAAK,YACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYoD,EAASpD,WACrBC,UAAWM,EAAEkD,OAAOhF,MACpByB,cAAekD,EAASlD,cACxBrE,iBAAkBuH,EAASvH,iBAC3BkE,iBAAkBqD,EAASrD,iBAC3BI,OAAQiD,EAASjD,UAGrB1B,MAAO2E,EAASnD,UAChBlF,UAAU,iBAEZ,uBACA,uBAAOA,UAAU,aAAjB,4BACA,uBACA,uBACEwC,KAAK,gBACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYoD,EAASpD,WACrBC,UAAWmD,EAASnD,UACpBC,cAAeK,EAAEkD,OAAOhF,MACxB5C,iBAAkBuH,EAASvH,iBAC3BkE,iBAAkBqD,EAASrD,iBAC3BI,OAAQiD,EAASjD,UAGrB1B,MAAO2E,EAASlD,cAChBnF,UAAU,iBAEZ,uBACA,sDACA,uBACA,uBACEwC,KAAK,mBACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYoD,EAASpD,WACrBC,UAAWmD,EAASnD,UACpBC,cAAekD,EAASlD,cACxBrE,iBAAkB0E,EAAEkD,OAAOhF,MAC3BsB,iBAAkBqD,EAASrD,iBAC3BI,OAAQiD,EAASjD,UAGrB1B,MAAO2E,EAASvH,iBAChBd,UAAU,iBAEZ,uBACA,sDACA,uBACA,uBACEwC,KAAK,mBACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYoD,EAASpD,WACrBC,UAAWmD,EAASnD,UACpBC,cAAekD,EAASlD,cACxBrE,iBAAkBuH,EAASvH,iBAC3BkE,iBAAkBQ,EAAEkD,OAAOhF,MAC3B0B,OAAQiD,EAASjD,UAGrB1B,MAAO2E,EAASrD,iBAChBhF,UAAU,iBAEZ,uBACA,sDACA,uBACA,uBACEwC,KAAK,SACLrC,KAAK,SACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OACR8C,EAAY,CACVrD,WAAYoD,EAASpD,WACrBC,UAAWmD,EAASnD,UACpBC,cAAekD,EAASlD,cACxBrE,iBAAkBuH,EAASvH,iBAC3BkE,iBAAkBqD,EAASrD,iBAC3BI,OAAQI,EAAEkD,OAAOC,iBAGrBjF,MAAO2E,EAASjD,OAChBpF,UAAU,iBAEZ,uBAEA,sBAAKA,UAAU,gCAAf,UACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,oBAGA,wBAAQH,UAAU,iBAAiBuF,QApIpB,SAACC,GACpBA,EAAEC,iBACFlB,EAAQqE,UAkIJ,2BCrFOC,MA9Cf,WACE,IAAMtE,EAAUC,cADQ,EAWQC,mBARR,CACtBQ,WAAY,GACZC,UAAW,GACXC,cAAe,GACfrE,iBAAkB,GAClBkE,iBAAkB,GAClBI,OAAQ,KATc,mBAWjBiD,EAXiB,KAWPC,EAXO,OAYE7D,mBAAS,MAZX,mBAYjBtC,EAZiB,KAYV2C,EAZU,KA4BxB,OACE,gCACE,cAAC,EAAD,CAAY3C,MAAOA,IACnB,oBAAInC,UAAU,oCAAd,kCAIA,8BACE,cAAC,EAAD,CACEqI,SAAUA,EACVC,YAAaA,EACbF,aAzBa,SAAC5C,GACpBA,EAAEC,iBACFX,EAAS,MR2CN,SAAP,oCQtCIgE,CAJiB,2BACZT,GADY,IAEfrG,OAAQ,YAGP6B,MAAK,WACJU,EAAQmB,KAAR,0BAAgC2C,EAASvH,sBAE1C6E,MAAMb,YC4CEiE,MAtEf,WACE,IAAMxE,EAAUC,cADE,EAEkBC,mBAAS,IAF3B,mBAEX6B,EAFW,KAEC0C,EAFD,OAGcvE,mBAAS,IAHvB,mBAGX8B,EAHW,KAGD0C,EAHC,OAIQxE,mBAAS,MAJjB,mBAIXtC,EAJW,KAIJ2C,EAJI,KAyBlB,OACE,gCACE,cAAC,EAAD,CAAY3C,MAAOA,IAEnB,oBAAInC,UAAU,oCAAd,4BAEA,8BACE,uBAAMA,UAAU,aAAauI,SA1Bd,SAAC/C,GACpBA,EAAEC,iBACFX,EAAS,MTqJN,SAAP,oCShJIoE,CAJc,CACZ5C,aACAC,aAGC1C,MAAK,WACJU,EAAQmB,KAAK,iBAEdC,MAAMb,IAeL,UACE,gDACA,uBACA,uBACEtC,KAAK,aACLrC,KAAK,OACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OAAOwD,EAAcxD,EAAEkD,OAAOhF,QACxCA,MAAO4C,EACPtG,UAAU,iBAEZ,uBACA,oDACA,uBACA,uBACEwC,KAAK,WACLrC,KAAK,SACLqI,UAAQ,EACRC,SAAU,SAACjD,GAAD,OAAOyD,EAAYzD,EAAEkD,OAAOC,gBACtCjF,MAAO6C,EACPvG,UAAU,iBAEZ,uBAEA,sBAAKA,UAAU,gCAAf,UACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,oBAGA,wBAAQH,UAAU,iBAAiBuF,QAxCxB,SAACC,GACpBA,EAAEC,iBACFlB,EAAQqE,UAsCA,gCCuBGO,MAnFf,WACE,IAAM5E,EAAUC,cACVpB,EAASgG,cAFU,EAIG3E,mBAAS,IAJZ,mBAIlBsC,EAJkB,KAIVC,EAJU,OAKSvC,mBAAS,IALlB,mBAKlB4E,EALkB,KAKPC,EALO,OAMC7E,mBAAS,MANV,mBAMlBtC,EANkB,KAMX2C,EANW,KAmCzB,OA3BAC,qBAAU,WACR,IAAMoC,EAAkB,IAAIC,gBAG5B,OAFAtC,EAAS,MACTd,IAAaH,KAAKmD,GAAWrB,MAAMb,GAC5B,kBAAMqC,EAAgBE,WAC5B,IAsBCN,EAEA,gCACE,cAAC,EAAD,CAAY5E,MAAOA,IAEnB,qBAAInC,UAAU,oCAAd,yCAC+BoD,EAAOH,kBAGtC,8BACE,uBAAMjD,UAAU,aAAauI,SA9BhB,SAAC/C,GACpBA,EAAEC,iBACFX,EAAS,MVmKN,SAAP,sCUjKIyE,CADiBxG,KAAKyG,MAAMH,GACGtF,SAAUX,EAAOH,gBAC7CY,MAAK,SAAC9B,GACL,IAAM0H,EAAY1C,EAAO3F,KAAI,SAAC6E,GAC5B,OAAOA,EAAMlC,WAAahC,EAASgC,SAAWhC,EAAWkE,KAE3De,EAAUyC,GACVlF,EAAQmB,KAAR,iBAEDC,MAAMb,IAkBH,UACE,kDACA,uBACA,yBACE9E,UAAU,eACVwC,KAAK,WACLiG,SAAU,SAACjD,GAAD,OAAO8D,EAAa9D,EAAEkD,OAAOhF,QAHzC,UAKE,wBAAQA,MAAM,GAAd,uCACCqD,GACCA,EAAO3F,KAAI,SAAC6E,GAAD,OACT,yBAEEvC,MAAOX,KAAKC,UAAUiD,GACtBuC,UAAQ,EAHV,UAKGvC,EAAMK,WALT,MAKwBL,EAAMM,WAJvBN,EAAMlC,gBAQnB,uBACA,sBAAK/D,UAAU,gCAAf,UACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,oBAGA,wBAAQH,UAAU,iBAAiBuF,QAxC1B,SAACC,GACpBA,EAAEC,iBACFlB,EAAQqE,UAsCE,+BASH,8CCnBIc,MA7Df,WAAwB,IAAD,EACqBjF,mBAAS,IAD9B,mBACdU,EADc,KACCwE,EADD,OAEmBlF,mBAAS,MAF5B,mBAEdxD,EAFc,KAEA6F,EAFA,OAGarC,oBAAS,GAHtB,mBAGdmF,EAHc,KAGHC,EAHG,KAkBrB,OAbA9E,qBAAU,WACJ9D,GAAwC,IAAxBA,EAAa6I,QAC/BD,GAAa,KAEd,CAAC5I,IAUF,gCACE,8BACG2I,GACC,mBAAG5J,UAAU,qBAAb,sCAIJ,oBAAIA,UAAU,oCAAd,yBAEA,gCACE,uBAAMA,UAAU,aAAauI,SAlBd,SAAC/C,GACpBA,EAAEC,iBACFtC,EAAiB,CAAEgC,kBAAiBtB,MAAK,SAAC9B,GACxC+E,EAAgB/E,OAed,UACE,uBACES,KAAK,gBACLrC,KAAK,OACL4J,YAAY,kCACZvB,UAAQ,EACRC,SAAU,SAACjD,GAAD,OAAOmE,EAAiBnE,EAAEkD,OAAOhF,QAC3CA,MAAOyB,EACPnF,UAAU,iBAEZ,uBACA,qBAAKA,UAAU,gCAAf,SACE,wBAAQA,UAAU,kBAAkBG,KAAK,SAAzC,uBAKJ,8BACE,oBAAIH,UAAU,8BAAd,SACGiB,GACCA,EAAaG,KAAI,SAAC6G,GAAD,OACf,oBAAIjI,UAAU,kBAAd,SACE,cAAC,EAAD,CAAmBa,YAAaoH,KADGA,EAAIhF,8BCsB1C+G,MAtEf,WACE,IAAMzF,EAAUC,cACVpB,EAASgG,cAFU,EAaO3E,mBATR,CACtBQ,WAAY,GACZC,UAAW,GACXC,cAAe,GACfrE,iBAAkB,GAClBkE,iBAAkB,GAClBI,OAAQ,GACRpD,OAAQ,WAXe,mBAalBqG,EAbkB,KAaRC,EAbQ,OAcC7D,mBAAS,MAdV,mBAclBtC,EAdkB,KAcX2C,EAdW,OAeeL,mBAAS,IAfxB,mBAelBxD,EAfkB,KAeJ6F,EAfI,OAgB2BrC,mBAAS,IAhBpC,mBAgBlBC,EAhBkB,KAgBEC,EAhBF,KAoDzB,OAlCAI,qBAAU,WACR,IAAMoC,EAAkB,IAAIC,gBAO5B,OANAtC,EAAS,MACT3B,EAAiB,IACdU,MAAK,SAAC9B,GACL+E,EAAgB/E,MAEjB4D,MAAMb,GACF,kBAAMqC,EAAgBE,WAC5B,IAEHtC,qBAAU,WACR,GAA4B,IAAxB9D,EAAa6I,OAAc,CAC7B,IAAMG,EAAUhJ,EAAaiJ,MAC3B,SAACjC,GAAD,OAASA,EAAIhF,iBAAmBkH,OAAO/G,EAAOH,mBAEhD0B,EAAsBsF,GACtB3B,EAAY2B,MAEb,CAAChJ,EAAcmC,IAgBhB,gCACE,cAAC,EAAD,CAAYjB,MAAOA,IACnB,oBAAInC,UAAU,oCAAd,mCAIA,8BACE,cAAC,EAAD,CACEqI,SAAUA,EACVC,YAAaA,EACbF,aAxBa,SAAC5C,GACpBA,EAAEC,iBACFX,EAAS,MZwDN,SAAP,sCYpDIsF,CAHwB,eACnB/B,GAEiC3D,EAAmBzB,gBACtDY,MAAK,WACJU,EAAQmB,KAAR,0BAAgC2C,EAASvH,sBAE1C6E,MAAMb,YCREuF,MArCf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAO,EAAMC,KAAK,IAAzB,SACE,cAAC,IAAD,CAAUtK,GAAI,iBAEhB,cAAC,IAAD,CAAOqK,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,IAAD,CAAUtK,GAAI,iBAEhB,cAAC,IAAD,CAAOqK,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,qCAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,U,MCbOC,MAff,WACE,OACE,qBAAKxK,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,WAAf,SACE,cAAC,EAAD,YCHKyK,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOF,KAAK,IAAZ,SACE,cAAC,EAAD,S,eCLRG,EAAOC,SAEPC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.c4b6061d.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\n/**\n * Defines the menu for this application.\n *\n * @returns {JSX.Element}\n */\n\nfunction Menu() {\n  return (\n    <nav className=\"navbar navbar-dark align-items-start p-0\">\n      <div className=\"container-fluid d-flex flex-column p-0\">\n        <Link\n          className=\"navbar-brand d-flex justify-content-center align-items-center sidebar-brand m-0\"\n          to=\"/\"\n        >\n          <div className=\"sidebar-brand-text mx-3\">\n            <span>Periodic Tables</span>\n          </div>\n        </Link>\n        <hr className=\"sidebar-divider my-0\" />\n        <ul className=\"nav navbar-nav text-light\" id=\"accordionSidebar\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <span className=\"oi oi-dashboard\" />\n              &nbsp;Dashboard\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/search\">\n              <span className=\"oi oi-magnifying-glass\" />\n              &nbsp;Search\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/reservations/new\">\n              <span className=\"oi oi-plus\" />\n              &nbsp;New Reservation\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/tables/new\">\n              <span className=\"oi oi-layers\" />\n              &nbsp;New Table\n            </Link>\n          </li>\n        </ul>\n        <div className=\"text-center d-none d-md-inline\">\n          <button\n            className=\"btn rounded-circle border-0\"\n            id=\"sidebarToggle\"\n            type=\"button\"\n          />\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Menu;\n","const dateFormat = /\\d\\d\\d\\d-\\d\\d-\\d\\d/;\nconst timeFormat = /\\d\\d:\\d\\d/;\n\n/**\n * Formats a Date object as YYYY-MM-DD.\n *\n * This function is *not* exported because the UI should generally avoid working directly with Date instance.\n * You may export this function if you need it.\n *\n * @param date\n *  an instance of a date object\n * @returns {string}\n *  the specified Date formatted as YYYY-MM-DD\n */\nfunction asDateString(date) {\n  return `${date.getFullYear().toString(10)}-${(date.getMonth() + 1)\n    .toString(10)\n    .padStart(2, \"0\")}-${date.getDate().toString(10).padStart(2, \"0\")}`;\n}\n\n/**\n * Format a date string in ISO-8601 format (which is what is returned from PostgreSQL) as YYYY-MM-DD.\n * @param dateString\n *  ISO-8601 date string\n * @returns {*}\n *  the specified date string formatted as YYYY-MM-DD\n */\nexport function formatAsDate(dateString) {\n  return dateString.match(dateFormat)[0];\n}\n\n/**\n * Format a time string in HH:MM:SS format (which is what is returned from PostgreSQL) as HH:MM.\n * @param timeString\n *  HH:MM:SS time string\n * @returns {*}\n *  the specified time string formatted as YHH:MM.\n */\nexport function formatAsTime(timeString) {\n  return timeString.match(timeFormat)[0];\n}\n\n/**\n * Today's date as YYYY-MM-DD.\n * @returns {*}\n *  the today's date formatted as YYYY-MM-DD\n */\nexport function today() {\n  return asDateString(new Date());\n}\n\n/**\n * Subtracts one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day prior to currentDate, formatted as YYYY-MM-DD\n */\nexport function previous(currentDate) {\n  let [year, month, day] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() - 1);\n  return asDateString(date);\n}\n\n/**\n * Adds one day to the specified date and return it in as YYYY-MM-DD.\n * @param currentDate\n *  a date string in YYYY-MM-DD format (this is also ISO-8601 format)\n * @returns {*}\n *  the date one day after currentDate, formatted as YYYY-MM-DD\n */\nexport function next(currentDate) {\n  let [year, month, day] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  date.setMonth(date.getMonth());\n  date.setDate(date.getDate() + 1);\n  return asDateString(date);\n}\n\nexport function getDayOfWeek(currentDate) {\n  let [year, month, day] = currentDate.split(\"-\");\n  month -= 1;\n  const date = new Date(year, month, day);\n  return date.getDay();\n}\n\nexport function timeNow() {\n  return formatAsTime(new Date().toTimeString());\n}\n\nexport function specifiedTime(hour, minute) {\n  const time = new Date();\n  time.setHours(hour, minute);\n  return formatAsTime(time.toString());\n}\n","import { formatAsDate } from \"./date-time\";\n\nfunction formatDate(reservation) {\n  reservation.reservation_date = formatAsDate(reservation.reservation_date);\n  return reservation;\n}\n\n/**\n * Formats the reservation_date property of a reservation.\n * @param reservations\n *  a single reservation, or an array of reservations.\n * @returns {[reservation]|reservation}\n *  the specified reservation(s) with the reservation_date property formatted as YYYY-MM-DD.\n */\nexport default function formatReservationDate(reservations) {\n  return Array.isArray(reservations)\n    ? reservations.map(formatDate)\n    : formatDate(reservations);\n}\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nimport formatReservationDate from \"./format-reservation-date\";\nimport formatReservationTime from \"./format-reservation-date\";\n\nconst API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  value to return if fetch call is aborted. Default value is undefined.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    const payload = await response.json();\n\n    if (payload.error) {\n      return Promise.reject({ message: payload.error });\n    }\n    return payload.data;\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n// RESERVATIONS\n\n/** POST a new reservation to the database\n *\n * @param reservation\n *  the new reservation data\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<reservation>}\n *  a promise that resolves the saved reservation\n */\nexport async function createReservation(data, signal) {\n  const url = `${API_BASE_URL}/reservations`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/** GET a reservation from the database\n *\n * @param reservationId\n *  the id of the desired reservation\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<reservation>}\n *  a promise that resolves the saved reservation\n */\nexport async function readReservation(reservationId, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations/${reservationId}`);\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n/** PUT an update to a reservation in the database\n *\n * @param data\n * the data to update the reservation\n * @param reservationId\n *  the id of the desired reservation\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<reservation>}\n *  a promise that resolves the saved reservation\n */\nexport async function updateReservation(data, reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/** PUT an update to a reservation's status in the database\n *\n * @param data\n * the data to update the reservation's status\n * @param reservationId\n *  the id of the desired reservation\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<reservation>}\n *  a promise that resolves the saved reservation\n */\nexport async function updateReservationStatus(data, reservation_id, signal) {\n  const url = `${API_BASE_URL}/reservations/${reservation_id}/status`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/**\n * Retrieves all existing reservation.\n * @returns {Promise<[reservation]>}\n *  a promise that resolves to a possibly empty array of reservation saved in the database.\n */\nexport async function listReservations(params, signal) {\n  const url = new URL(`${API_BASE_URL}/reservations`);\n  Object.entries(params).forEach(([key, value]) =>\n    url.searchParams.append(key, value.toString())\n  );\n  return await fetchJson(url, { headers, signal }, [])\n    .then(formatReservationDate)\n    .then(formatReservationTime);\n}\n\n// TABLES\n\n/** POST a new table to the database\n *\n * @param table\n *  the new table data\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<table>}\n *  a promise that resolves the saved table\n */\nexport async function createTable(data, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify({ data }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/** PUT an update to a table's status in the database\n *  for assigned a reservation to a table\n *\n * @param table_id\n * the id of the specified table\n * @param reservation_id\n *  the id of the desired reservation\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<table>}\n *  a promise that resolves the saved table\n */\nexport async function updateSeatReservation(table_id, reservation_id, signal) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify({ data: { reservation_id } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/** DELETE request to remove reservation_id from a table\n *\n * @param table_id\n * the id of the specified table\n * @param signal\n * optional AbortController.signal\n */\nexport async function deleteReservationId(table_id, signal) {\n  const url = `${API_BASE_URL}/tables/${table_id}/seat`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n    body: JSON.stringify({ data: { table_id } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n\n/** GET Request to retrieve all existing tables.\n *\n * @params signal\n * optional AbortController.signal\n * @returns {Promise<[table]>}\n *  a promise that resolves to a possibly empty array of tables saved in the database.\n */\nexport async function listTables(signal) {\n  const url = new URL(`${API_BASE_URL}/tables`);\n  return await fetchJson(url, { headers, signal }, []);\n}\n\nexport async function deleteTable(table_id, signal) {\n  const url = `${API_BASE_URL}/tables`;\n  const options = {\n    method: \"DELETE\",\n    headers,\n    body: JSON.stringify({ data: { table_id } }),\n    signal,\n  };\n  return await fetchJson(url, options);\n}\n","/**\n * useQuery is a custom hook that makes use of the useLocation and the URL class to parse the query parameters.\n *\n * @example\n *\n *     const query = useQuery();\n *     const date = query.get(\"date\")\n */\n\nimport { useLocation } from \"react-router-dom\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import React from \"react\";\n\n/**\n * Defines the alert message to render if the specified error is truthy.\n * @param error\n *  an instance of an object with `.message` property as a string, typically an Error instance.\n * @returns {JSX.Element}\n *  a bootstrap danger alert that contains the message string.\n */\n\nfunction ErrorAlert({ error }) {\n  return (\n    error && (\n      <div className=\"alert alert-danger m-2\">Error: {error.message}</div>\n    )\n  );\n}\n\nexport default ErrorAlert;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport { updateReservationStatus } from \"../utils/api\";\n\nfunction ReservationDetail({ reservation }) {\n  const history = useHistory();\n\n  const [currentReservation, setCurrentReservation] = useState(reservation);\n  const [showSeat, setShowSeat] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (\n      currentReservation.status === \"booked\" ||\n      currentReservation.status === null\n    ) {\n      setShowSeat(true);\n    }\n  }, [currentReservation]);\n\n  const handleSeat = (e) => {\n    e.preventDefault();\n    setError(null);\n    setShowSeat(false);\n    updateReservationStatus(\n      { status: \"seated\" },\n      currentReservation.reservation_id\n    )\n      .then((response) => {\n        setCurrentReservation(response);\n        history.push(`/reservations/${currentReservation.reservation_id}/seat`);\n      })\n      .catch(setError);\n  };\n\n  const handleCancelRes = (e) => {\n    e.preventDefault();\n    setError(null);\n    const confirmBox = window.confirm(\n      \"Do you want to cancel this reservation? This cannot be undone.\"\n    );\n    if (confirmBox === true) {\n      updateReservationStatus(\n        { status: \"cancelled\" },\n        currentReservation.reservation_id\n      )\n        .then((response) => {\n          setCurrentReservation(response);\n          history.go(0);\n        })\n        .catch(setError);\n    }\n  };\n\n  return (\n    <div className=\"card text-left card-background\">\n      <ErrorAlert error={error} />\n      <div className=\"card-body\">\n        <h4 className=\"card-title text-center\">\n          {currentReservation.reservation_time}\n        </h4>\n        <p className=\"card-text text-center\">\n          {currentReservation.reservation_date}\n        </p>\n\n        <p className=\"card-text\">\n          {currentReservation.first_name} {currentReservation.last_name}\n        </p>\n        <p className=\"card-text\">{currentReservation.mobile_number}</p>\n        <p className=\"card-text\">Party Size: {currentReservation.people}</p>\n        <p\n          className=\"text-center boldtext\"\n          data-reservation-id-status={currentReservation.reservation_id}\n        >\n          {currentReservation.status ? currentReservation.status : \"booked\"}\n        </p>\n\n        <div className=\"d-flex justify-content-center mb-1\">\n          {showSeat ? (\n            <a\n              href={`/reservations/${currentReservation.reservation_id}/seat`}\n              onClick={handleSeat}\n              className=\"card-link btn btn-primary btn-sm\"\n            >\n              Seat\n            </a>\n          ) : (\n            <div></div>\n          )}\n        </div>\n\n        <div className=\"d-flex justify-content-center btn-group\">\n          <a\n            href={`/reservations/${currentReservation.reservation_id}/edit`}\n            className=\"btn btn-sm btn-outline-dark\"\n          >\n            EDIT\n          </a>\n          <button\n            data-reservation-id-cancel={currentReservation.reservation_id}\n            onClick={handleCancelRes}\n            className=\"btn btn-danger btn-sm btn-outline-dark\"\n          >\n            Cancel Reservation\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ReservationDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport {\n  deleteReservationId,\n  deleteTable,\n  updateReservationStatus,\n} from \"../utils/api\";\n\nfunction TableDetail({ table }) {\n  const history = useHistory();\n  const [currentTable, setCurrentTable] = useState(table);\n  const [tableStatus, setTableStatus] = useState(\"Free\");\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (currentTable.reservation_id) {\n      setTableStatus(\n        `Occupied by reservation ID: ${currentTable.reservation_id}`\n      );\n    } else {\n      setTableStatus(\"Free\");\n    }\n  }, [currentTable]);\n\n  const handleFinish = (e) => {\n    e.preventDefault();\n    setError(null);\n    const confirmBox = window.confirm(\n      \"Is this table ready to seat new guests? This cannot be undone.\"\n    );\n    if (confirmBox === true) {\n      updateReservationStatus(\n        { status: \"finished\" },\n        currentTable.reservation_id\n      ).catch(setError);\n      deleteReservationId(currentTable.table_id)\n        .then((response) => {\n          setCurrentTable(response);\n          history.go(0);\n        })\n        .catch(setError);\n    }\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setError(null);\n    const confirmBox = window.confirm(\n      \"Are you sure you want to delete this table? This cannot be undone.\"\n    );\n    if (confirmBox === true) {\n      deleteTable(currentTable.table_id).catch(setError);\n      history.go(0);\n    }\n  };\n\n  return (\n    <div className=\"card text-center card-background\">\n      <ErrorAlert error={error} />\n      <div className=\"card-body\">\n        <p className=\"card-text\">Table Name: {currentTable.table_name}</p>\n        <p className=\"card-text\">Table Capacity: {currentTable.capacity}</p>\n        <p\n          className=\"card-text\"\n          data-table-id-status={`${currentTable.table_id}`}\n        >\n          {tableStatus}\n        </p>\n        <div className=\"d-flex justify-content-center\">\n          {tableStatus === \"Free\" ? (\n            <div></div>\n          ) : (\n            <div>\n              <button\n                className=\"btn btn-primary\"\n                data-table-id-finish={currentTable.table_id}\n                onClick={handleFinish}\n              >\n                FINISH\n              </button>{\" \"}\n              <button className=\"btn btn-danger\" onClick={handleCancel}>\n                CANCEL\n              </button>\n            </div>\n          )}\n        </div>\n        <button className=\"btn btn-danger\" onClick={handleDelete}>\n          Delete\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default TableDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { listReservations, listTables } from \"../utils/api\";\nimport { previous, next, today } from \"../utils/date-time\";\nimport useQuery from \"../utils/useQuery\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\nimport ReservationDetail from \"./ReservationDetail\";\nimport TableDetail from \"./TableDetail\";\n\nfunction Dashboard() {\n  const date = today();\n\n  const [reservations, setReservations] = useState(null);\n  const [tables, setTables] = useState(null);\n  const [viewDate, setViewDate] = useState(date);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setError(null);\n    if (viewDate === date) {\n      listReservations({ date }, abortController.signal)\n        .then(setReservations)\n        .catch(setError);\n    } else {\n      listReservations({ viewDate }, abortController.signal)\n        .then(setReservations)\n        .catch(setError);\n    }\n    return () => abortController.abort();\n  }, [date, viewDate]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setError(null);\n    listTables().then(setTables).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  const query = useQuery();\n  const searchedDate = query.get(\"date\");\n\n  useEffect(() => {\n    if (searchedDate && searchedDate !== \"\") {\n      setViewDate(searchedDate);\n    }\n  }, [searchedDate]);\n\n  const handlePreviousDay = (e) => {\n    e.preventDefault();\n    setViewDate(previous(viewDate));\n  };\n  const handleNextDay = (e) => {\n    e.preventDefault();\n    setViewDate(next(viewDate));\n  };\n  const handleTodayDay = (e) => {\n    e.preventDefault();\n    setViewDate(date);\n  };\n\n  if (reservations) {\n    return (\n      <main>\n        <div className=\"d-flex mb-3 justify-content-center\">\n          <h1>Your Dashboard</h1>\n        </div>\n\n        <div className=\"d-flex mb-3 justify-content-around\">\n          <button className=\"btn btn-info\" onClick={handlePreviousDay}>\n            Previous Day\n          </button>\n          <button className=\"btn btn-dark\" onClick={handleTodayDay}>\n            Today\n          </button>\n          <button className=\"btn btn-info\" onClick={handleNextDay}>\n            Next Day\n          </button>\n        </div>\n\n        <ErrorAlert error={error} />\n\n        <div className=\"container\">\n          <div className=\"d-flex mb-3 justify-content-center\">\n            <h4>Date: {viewDate}</h4>\n          </div>\n          <div className=\"row\">\n            {reservations &&\n              reservations.map((res) => (\n                <div className=\"col-md-6 mb-3\" key={res.reservation_id}>\n                  <ReservationDetail reservation={res} />\n                </div>\n              ))}\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <h3 className=\"d-flex m-3 justify-content-center\">Tables</h3>\n          <div className=\"row\">\n            {tables &&\n              tables.map((table) => (\n                <div className=\"col-md-6 mb-3\" key={table.table_id}>\n                  <TableDetail table={table} />\n                </div>\n              ))}\n          </div>\n        </div>\n      </main>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\n/**\n * Defines the \"Not Found\" page that is displayed for any unmatched route.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import { useHistory } from \"react-router-dom\";\n\nfunction ReservationForm({ handleSubmit, formData, setFormData }) {\n  const history = useHistory();\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  return (\n    <form className=\"form-group\" onSubmit={handleSubmit}>\n      <label className=\"form-label\">First Name:</label>\n      <br />\n      <input\n        name=\"first_name\"\n        type=\"text\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: e.target.value,\n            last_name: formData.last_name,\n            mobile_number: formData.mobile_number,\n            reservation_date: formData.reservation_date,\n            reservation_time: formData.reservation_time,\n            people: formData.people,\n          })\n        }\n        value={formData.first_name}\n        className=\"form-control\"\n      />\n      <br />\n      <label className=\"form-label\">Last Name:</label>\n      <br />\n      <input\n        name=\"last_name\"\n        type=\"text\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: formData.first_name,\n            last_name: e.target.value,\n            mobile_number: formData.mobile_number,\n            reservation_date: formData.reservation_date,\n            reservation_time: formData.reservation_time,\n            people: formData.people,\n          })\n        }\n        value={formData.last_name}\n        className=\"form-control\"\n      />\n      <br />\n      <label className=\"form-label\">Mobile Number:</label>\n      <br />\n      <input\n        name=\"mobile_number\"\n        type=\"text\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: formData.first_name,\n            last_name: formData.last_name,\n            mobile_number: e.target.value,\n            reservation_date: formData.reservation_date,\n            reservation_time: formData.reservation_time,\n            people: formData.people,\n          })\n        }\n        value={formData.mobile_number}\n        className=\"form-control\"\n      />\n      <br />\n      <label>Reservation Date:</label>\n      <br />\n      <input\n        name=\"reservation_date\"\n        type=\"date\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: formData.first_name,\n            last_name: formData.last_name,\n            mobile_number: formData.mobile_number,\n            reservation_date: e.target.value,\n            reservation_time: formData.reservation_time,\n            people: formData.people,\n          })\n        }\n        value={formData.reservation_date}\n        className=\"form-control\"\n      />\n      <br />\n      <label>Reservation Time:</label>\n      <br />\n      <input\n        name=\"reservation_time\"\n        type=\"time\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: formData.first_name,\n            last_name: formData.last_name,\n            mobile_number: formData.mobile_number,\n            reservation_date: formData.reservation_date,\n            reservation_time: e.target.value,\n            people: formData.people,\n          })\n        }\n        value={formData.reservation_time}\n        className=\"form-control\"\n      />\n      <br />\n      <label>Amount of People:</label>\n      <br />\n      <input\n        name=\"people\"\n        type=\"number\"\n        required\n        onChange={(e) =>\n          setFormData({\n            first_name: formData.first_name,\n            last_name: formData.last_name,\n            mobile_number: formData.mobile_number,\n            reservation_date: formData.reservation_date,\n            reservation_time: formData.reservation_time,\n            people: e.target.valueAsNumber,\n          })\n        }\n        value={formData.people}\n        className=\"form-control\"\n      />\n      <br />\n\n      <div className=\"d-flex justify-content-around\">\n        <button className=\"btn btn-primary\" type=\"submit\">\n          submit\n        </button>\n        <button className=\"btn btn-danger\" onClick={handleCancel}>\n          CANCEL\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default ReservationForm;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createReservation } from \"../utils/api\";\nimport ErrorAlert from \"./ErrorAlert\";\nimport ReservationForm from \"./ReservationForm\";\n\nfunction NewReservation() {\n  const history = useHistory();\n\n  const initialFormData = {\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    reservation_date: \"\",\n    reservation_time: \"\",\n    people: \"\",\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(null);\n    const reservation = {\n      ...formData,\n      status: \"booked\",\n    };\n    createReservation(reservation)\n      .then(() => {\n        history.push(`/dashboard?date=${formData.reservation_date}`);\n      })\n      .catch(setError);\n  };\n\n  return (\n    <div>\n      <ErrorAlert error={error} />\n      <h3 className=\"d-flex m-3 justify-content-center\">\n        New Reservation Form\n      </h3>\n\n      <div>\n        <ReservationForm\n          formData={formData}\n          setFormData={setFormData}\n          handleSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default NewReservation;\n","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { createTable } from \"../utils/api\";\nimport ErrorAlert from \"./ErrorAlert\";\n\nfunction NewTable() {\n  const history = useHistory();\n  const [table_name, setTable_name] = useState(\"\");\n  const [capacity, setCapacity] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(null);\n    const table = {\n      table_name,\n      capacity,\n    };\n    createTable(table)\n      .then(() => {\n        history.push(\"/dashboard\");\n      })\n      .catch(setError);\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  return (\n    <div>\n      <ErrorAlert error={error} />\n\n      <h3 className=\"d-flex m-3 justify-content-center\">New Table Form</h3>\n\n      <div>\n        <form className=\"form-group\" onSubmit={handleSubmit}>\n          <label>Table Name:</label>\n          <br />\n          <input\n            name=\"table_name\"\n            type=\"text\"\n            required\n            onChange={(e) => setTable_name(e.target.value)}\n            value={table_name}\n            className=\"form-control\"\n          />\n          <br />\n          <label>Table Capacity:</label>\n          <br />\n          <input\n            name=\"capacity\"\n            type=\"number\"\n            required\n            onChange={(e) => setCapacity(e.target.valueAsNumber)}\n            value={capacity}\n            className=\"form-control\"\n          />\n          <br />\n\n          <div className=\"d-flex justify-content-around\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              SUBMIT\n            </button>\n            <button className=\"btn btn-danger\" onClick={handleCancel}>\n              CANCEL\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default NewTable;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { listTables, updateSeatReservation } from \"../utils/api\";\nimport ErrorAlert from \"../layout/ErrorAlert\";\n\nfunction SeatReservation() {\n  const history = useHistory();\n  const params = useParams();\n\n  const [tables, setTables] = useState([]);\n  const [formValue, setFormValue] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setError(null);\n    listTables().then(setTables).catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(null);\n    const tableObj = JSON.parse(formValue);\n    updateSeatReservation(tableObj.table_id, params.reservation_id)\n      .then((response) => {\n        const newTables = tables.map((table) => {\n          return table.table_id === response.table_id ? response : table;\n        });\n        setTables(newTables);\n        history.push(`/dashboard`);\n      })\n      .catch(setError);\n  };\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    history.goBack();\n  };\n\n  if (tables) {\n    return (\n      <div>\n        <ErrorAlert error={error} />\n\n        <h3 className=\"d-flex m-3 justify-content-center\">\n          Seating for reservation ID: {params.reservation_id}\n        </h3>\n\n        <div>\n          <form className=\"form-group\" onSubmit={handleSubmit}>\n            <label>Table Number:</label>\n            <br />\n            <select\n              className=\"form-control\"\n              name=\"table_id\"\n              onChange={(e) => setFormValue(e.target.value)}\n            >\n              <option value=\"\">--Please Choose a Table--</option>\n              {tables &&\n                tables.map((table) => (\n                  <option\n                    key={table.table_id}\n                    value={JSON.stringify(table)}\n                    required\n                  >\n                    {table.table_name} - {table.capacity}\n                  </option>\n                ))}\n            </select>\n            <br />\n            <div className=\"d-flex justify-content-around\">\n              <button className=\"btn btn-primary\" type=\"submit\">\n                SUBMIT\n              </button>\n              <button className=\"btn btn-danger\" onClick={handleCancel}>\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  } else {\n    return <div>Loading...</div>;\n  }\n}\n\nexport default SeatReservation;\n","import React, { useEffect, useState } from \"react\";\nimport { listReservations } from \"../utils/api\";\nimport ReservationDetail from \"../dashboard/ReservationDetail\";\n\nfunction SearchPhone() {\n  const [mobile_number, setMobile_number] = useState(\"\");\n  const [reservations, setReservations] = useState(null);\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (reservations && reservations.length === 0) {\n      setShowError(true);\n    }\n  }, [reservations]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    listReservations({ mobile_number }).then((response) => {\n      setReservations(response);\n    });\n  };\n\n  return (\n    <div>\n      <div>\n        {showError && (\n          <p className=\"alert alert-danger\">No reservations found.</p>\n        )}\n      </div>\n\n      <h3 className=\"d-flex m-3 justify-content-center\">Search Form</h3>\n\n      <div>\n        <form className=\"form-group\" onSubmit={handleSubmit}>\n          <input\n            name=\"mobile_number\"\n            type=\"text\"\n            placeholder=\"Enter a customer's phone number\"\n            required\n            onChange={(e) => setMobile_number(e.target.value)}\n            value={mobile_number}\n            className=\"form-control\"\n          />\n          <br />\n          <div className=\"d-flex justify-content-center\">\n            <button className=\"btn btn-primary\" type=\"submit\">\n              FIND\n            </button>\n          </div>\n        </form>\n        <div>\n          <ul className=\"list-group list-group-flush\">\n            {reservations &&\n              reservations.map((res) => (\n                <li className=\"list-group-item\" key={res.reservation_id}>\n                  <ReservationDetail reservation={res} />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SearchPhone;\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { listReservations, updateReservation } from \"../utils/api\";\nimport ErrorAlert from \"./ErrorAlert\";\nimport ReservationForm from \"./ReservationForm\";\n\nfunction EditReservation() {\n  const history = useHistory();\n  const params = useParams();\n\n  const initialFormData = {\n    first_name: \"\",\n    last_name: \"\",\n    mobile_number: \"\",\n    reservation_date: \"\",\n    reservation_time: \"\",\n    people: \"\",\n    status: \"booked\",\n  };\n  const [formData, setFormData] = useState(initialFormData);\n  const [error, setError] = useState(null);\n  const [reservations, setReservations] = useState([]);\n  const [currentReservation, setCurrentReservation] = useState({});\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    setError(null);\n    listReservations({})\n      .then((response) => {\n        setReservations(response);\n      })\n      .catch(setError);\n    return () => abortController.abort();\n  }, []);\n\n  useEffect(() => {\n    if (reservations.length !== 0) {\n      const current = reservations.find(\n        (res) => res.reservation_id === Number(params.reservation_id)\n      );\n      setCurrentReservation(current);\n      setFormData(current);\n    }\n  }, [reservations, params]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setError(null);\n    const updatedReservation = {\n      ...formData,\n    };\n    updateReservation(updatedReservation, currentReservation.reservation_id)\n      .then(() => {\n        history.push(`/dashboard?date=${formData.reservation_date}`);\n      })\n      .catch(setError);\n  };\n\n  return (\n    <div>\n      <ErrorAlert error={error} />\n      <h3 className=\"d-flex m-3 justify-content-center\">\n        Edit Reservation Form\n      </h3>\n\n      <div>\n        <ReservationForm\n          formData={formData}\n          setFormData={setFormData}\n          handleSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default EditReservation;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport Dashboard from \"../dashboard/Dashboard\";\nimport NotFound from \"./NotFound\";\nimport NewReservation from \"./NewReservation\";\nimport NewTable from \"./NewTable\";\nimport SeatReservation from \"./SeatReservation\";\nimport SearchPhone from \"./SearchPhone\";\nimport EditReservation from \"./EditReservation\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact={true} path=\"/\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact path=\"/reservations\">\n        <Redirect to={\"/dashboard\"} />\n      </Route>\n      <Route exact path=\"/reservations/new\">\n        <NewReservation />\n      </Route>\n      <Route path=\"/reservations/:reservation_id/seat\">\n        <SeatReservation />\n      </Route>\n      <Route path=\"/reservations/:reservation_id/edit\">\n        <EditReservation />\n      </Route>\n      <Route path=\"/tables/new\">\n        <NewTable />\n      </Route>\n      <Route path=\"/dashboard\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/dashboard/:date\">\n        <Dashboard />\n      </Route>\n      <Route path=\"/search\">\n        <SearchPhone />\n      </Route>\n      <Route>\n        <NotFound />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Routes from \"./Routes\";\n\nimport \"./Layout.css\";\n\n/**\n * Defines the main layout of the application.\n *\n * You will not need to make changes to this file.\n *\n * @returns {JSX.Element}\n */\nfunction Layout() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2 side-bar\">\n          <Menu />\n        </div>\n        <div className=\"col main\">\n          <Routes />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./layout/Layout\";\n\n/**\n * Defines the root application component.\n * @returns {JSX.Element}\n */\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Layout />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n//needed to pull correct URL from backend\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}